// <auto-generated />
using System;
using HospitalManagement.Web.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HospitalManagement.Web.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("HospitalManagement.Web.Server.Duty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndShift")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartShift")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Duties");
                });

            modelBuilder.Entity("HospitalManagement.Web.Server.Employee", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AccountCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFirstLogin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("Pesel")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("HospitalManagement.Web.Server.EmployeeSpecialize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NumberPwz")
                        .HasColumnType("TEXT");

                    b.Property<string>("SpecializeEmployee")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("EmployeeSpecializes");
                });

            modelBuilder.Entity("HospitalManagement.Web.Server.EmployeeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmployeeRole")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("EmployeeTypes");
                });

            modelBuilder.Entity("HospitalManagement.Web.Server.Duty", b =>
                {
                    b.HasOne("HospitalManagement.Web.Server.Employee", "Employee")
                        .WithMany("EmployeeDuties")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HospitalManagement.Web.Server.EmployeeSpecialize", b =>
                {
                    b.HasOne("HospitalManagement.Web.Server.Employee", "Employee")
                        .WithOne("EmployeeSpecialize")
                        .HasForeignKey("HospitalManagement.Web.Server.EmployeeSpecialize", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HospitalManagement.Web.Server.EmployeeType", b =>
                {
                    b.HasOne("HospitalManagement.Web.Server.Employee", "Employee")
                        .WithOne("EmployeeType")
                        .HasForeignKey("HospitalManagement.Web.Server.EmployeeType", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HospitalManagement.Web.Server.Employee", b =>
                {
                    b.Navigation("EmployeeDuties");

                    b.Navigation("EmployeeSpecialize");

                    b.Navigation("EmployeeType");
                });
#pragma warning restore 612, 618
        }
    }
}
